<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://web-harvest.sourceforge.net/schema/1.0/config"
	scriptlang="groovy">


	<include-config code="page_object_login_page"></include-config>
	<include-config code="page_object_main_page"></include-config>
	<include-config code="page_object_utils"></include-config>
	<include-config code="page_object_credentials"></include-config>
	<include-config code="page_object_inbox_page"></include-config>
	<include-config code="creating_excel_report"></include-config>

	<var-def name="amount_meetings">
		<template>${amount_meetings}</template>
	</var-def>

	<robotics-flow>
		<robot driver="chrome" start-in-private="true"
			maximize-on-startup="true" name="robot" close-on-completion="true">
			<capability name="chromeOptions">
				<script return="options"><![CDATA[
					options = new org.openqa.selenium.chrome.ChromeOptions();
					properties = [:];
					properties.put("profile.default_content_setting_values.geolocation", 2);
					properties.put("profile.default_content_setting_values.notifications", 2);
					options.setExperimentalOption("prefs", properties);
				]]></script>
			</capability>
			<script><![CDATA[
				WebDriver driver = driver();
				WFLogger.createLogger(log);

				log.info("Start to create object of the Credentials");
				def credentialsObject = credentials.getWrappedObject();
				log.info("Object of the class Creentials successfully created");


				log.info("Start to create object of the Utils");
				def utilsObject = utils.getWrappedObject();
				log.info("Object of the class Utils successfully created");
				utilsObject.setInctance(driver, log);
				log.info("Driver in the Utils was initilized");

				log.info("Create object of the LoginPageActions");
				def loginPageActions = login_page_actions.getWrappedObject();
				log.info("Object of the class LoginPageActions successfully created");
				loginPageActions.setInstance(driver, log, utilsObject, credentialsObject);
				log.info("Driver and logger in the LoginPageActions were initilized");

				log.info("Create object of the MainPageActions");
				def mainPageActions = main_page_actions.getWrappedObject();
				log.info("Object of the class MainPageActions successfully created");
				mainPageActions.setInstance(driver, log, utilsObject, credentialsObject);
				log.info("Driver and logger and utils object in the MainPageActions were initilized");

				log.info("Create object of the InboxPageActions");
				def inboxPageActions = inbox_page_actions.getWrappedObject();
				log.info("Object of the class InboxPageActions successfully created");
				inboxPageActions.setInstance(driver, log, utilsObject, credentialsObject);
				log.info("Driver and logger and utils object in the InboxPageActions were initilized");

				log.info("Create object of the ExcelReport");
				def excelReport = excel_report.getWrappedObject();
				log.info("Object of the class ExcelReport successfully created");
				excelReport.setInstance(log,credentialsObject);
				log.info("Logger in the ExcelReport was initilized");


				loginPageActions.enterMail();
				mainPageActions.openInbox();
				inboxPageActions.collectInformationAboutRooms(Integer.parseInt(amount_meetings.toString()))
				inboxPageActions.fillInformationAboutBookedUnbookedMeetings(inboxPageActions.getAllMeetingsInformationList())

				sys.defineVariable("xlsx_byte_array", excelReport.createXLSX(inboxPageActions.getAllMeetingsInformationList()).toByteArray());
				sys.defineVariable("add_to_cc_list", 	inboxPageActions.getAddToCCList());
				sys.defineVariable("unbooked_meeting_list", inboxPageActions.getUnbookedMeetingList());
			]]></script>
		</robot>
	</robotics-flow>

	<log>Save on s3 excel report</log>
	<var-def name="link_s3_report_xlsx">
		<s3 bucket="temp.bucket" access-key="RCQHVLMSDGF5ND75PTXV"
			secret-key="x3U6sfyrHvpsyFN-qp4XmDVFNT65F2kFAMrZzA==" endpoint-url="http://wfapp2-s3.wkf2-rpa.projects.epam.com">
			<s3-put path="14437/report.xlsx" content-type="application/xlsx"
				content-disposition="inline" acl="PublicRead">
				<var name="xlsx_byte_array" />
			</s3-put>
		</s3>
	</var-def>

	<export include-original-data="false">
		<multi-column list="${add_to_cc_list}" split-results="false">
			<put-to-column name="booked_date"></put-to-column>
		</multi-column>
		<multi-column list="${unbooked_meeting_list}"
			split-results="false">
			<put-to-column name="unbooked_date"></put-to-column>
		</multi-column>
		<single-column name="link_s3_report_xlsx">
			<var name="link_s3_report_xlsx" />
		</single-column>
	</export>

</config>